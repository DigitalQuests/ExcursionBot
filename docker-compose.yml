services:
  nginx:
    image: markovav/royal-quests-frontend
    depends_on:
      - backend
    ports:
      - "80:80"

  backend:
    image: markovav/royal-quests-backend
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      DATABASE_URL: jdbc:postgresql://postgres:5432/postgres
      WEBAPP_URL: https://royalquests.markovav.ru

  postgres:
    image: 'postgres:latest'
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    ports:
      - "127.0.0.1:5430:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  grafana:
    image: grafana/grafana:8.0.3
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000

  prometheus:
    image: prom/prometheus:v2.28.0
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    depends_on:
      - node-exporter

  node-exporter:
    image: prom/node-exporter:v1.1.2
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100

volumes:
  postgres-data:
  grafana-data: